generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Adresse {
  id       Int     @id
  ville    String  @db.VarChar(30)
  commune  String  @db.VarChar(30)
  quartier String  @db.VarChar(30)
  avenue   String  @db.VarChar(30)
  numero   Int
  eleves   Eleve[]
}

model AnneeScolaire {
  id                   Int                    @id
  designation          String                 @db.VarChar(30)
  classePrimaires       ClassePrimaire[]
  confirmationPrimaires ConfirmationPrimaire[]
  elevePrimaires        ElevePrimaire[]
  inscriptionPrimaires  InscriptionPrimaire[]
  miseEnPlacePrimaires  MiseEnPlacePrimaire[]
  recouvrementPrimaires  RecouvrementPrimaire[]
}

model ClassePrimaire {
  id                  Int                   @id
  classe              String                @db.VarChar(10)
  anneeScolaireId     Int
  anneeScolaire       AnneeScolaire         @relation(fields: [anneeScolaireId], references: [id], onUpdate: Restrict, map: "ClasseP_AnneeS_id")
  elevePrimaires       ElevePrimaire[]
  miseEnplacePrimaires MiseEnPlacePrimaire[]

  @@index([anneeScolaireId], map: "ClasseP_AnneeS_id")
}

model ConfirmationPrimaire {
  id              Int           @id
  classe          String        @db.VarChar(10)
  date            DateTime      @db.DateTime(0)
  personnelId     Int
  elevePrimaireId Int
  anneeScolaireId Int
  anneeScolaire   AnneeScolaire @relation(fields: [anneeScolaireId], references: [id], onUpdate: Restrict, map: "ConfirmationP_AnneeScolaire_id")
  elevePrimaire   ElevePrimaire @relation(fields: [elevePrimaireId], references: [id], onUpdate: Restrict, map: "ConfirmationP_ElevePrimaire_id")
  personnel       Personnel     @relation(fields: [personnelId], references: [id], onUpdate: Restrict, map: "ConfirmationP_Personnel_id")

  @@index([personnelId], map: "ConfirmationP_Personnel_id")
  @@index([anneeScolaireId], map: "ConfirmationP_AnneeS_id")
  @@index([elevePrimaireId], map: "ConfirmationP_EleveP_id")
}

model Eleve {
  id                          Int                   @id
  nom                         String                @db.VarChar(30)
  postnom                     String                @db.VarChar(30)
  prenom                      String                @db.VarChar(30)
  sexe                        String                @db.Char(1)
  matricule                   String                @db.VarChar(30)
  dateNaissance               DateTime              @db.Date
  nationalite                 String                @db.VarChar(30)
  langueEnseignementProposees String                @db.VarChar(90)
  moyenTransport              String                @db.VarChar(30)
  langueFamille               String                @db.VarChar(30)
  nbreEnfantToitPaternel      Int
  personneRetireEnfant        String                @db.VarChar(60)
  adresseId                   Int
  parentId                    Int
  adresse                     Adresse               @relation(fields: [adresseId], references: [id], onUpdate: Restrict, map: "Eleve_adresseId_Adresse_id")
  parent                      Parent                @relation(fields: [parentId], references: [id], onUpdate: Restrict, map: "Eleve_parentId_Parent_id")
  elevePrimaires              ElevePrimaire[]
  inscriptionPrimaires        InscriptionPrimaire[]

  @@index([adresseId], map: "Eleve_Adresse_id")
  @@index([parentId], map: "Eleve_Parent_id")
}

model ElevePrimaire {
  id                          Int                           @id
  eleveId                     Int
  classePrimaireId            Int
  anneScolaireId              Int
  confirmationPrimaires        ConfirmationPrimaire[]
  anneeScolaire               AnneeScolaire                 @relation(fields: [anneScolaireId], references: [id], onUpdate: Restrict, map: "EleveP_AnneeS_id")
  classePrimaire              ClassePrimaire                @relation(fields: [classePrimaireId], references: [id], onUpdate: Restrict, map: "EleveP_ClasseP_id")
  eleve                       Eleve                         @relation(fields: [eleveId], references: [id], onUpdate: Restrict, map: "ElevePrimaire_eleveId_Eleve_id")
  recouvrementPrimaireDetails RecouvrementPrimaireDetails[]

  @@index([anneScolaireId], map: "EleveP_AnneeS_id")
  @@index([classePrimaireId], map: "EleveP_ClasseP_id")
  @@index([eleveId], map: "EleveP_Eleve_id")
}

model Fonction {
  id          Int         @id
  designation String      @db.VarChar(30)
  personnels   Personnel[]
}

model InscriptionPrimaire {
  id                  Int           @id
  monteDansLaClasseDe String        @db.VarChar(10)
  ecoleDeProvenance   String        @db.VarChar(30)
  motifDeSortie       String        @db.VarChar(100)
  dateDeSortie        DateTime      @db.Date
  dateInscription     DateTime      @db.DateTime(0)
  eleveId             Int
  personnelId         Int
  anneeScolaireId     Int
  anneeScolaire       AnneeScolaire @relation(fields: [anneeScolaireId], references: [id], onUpdate: Restrict, map: "InscriptionP_AnneeScolaire_id")
  eleve               Eleve         @relation(fields: [eleveId], references: [id], onUpdate: Restrict, map: "InscriptionP_Eleve_id")
  personnel           Personnel     @relation(fields: [personnelId], references: [id], onUpdate: Restrict, map: "InscriptionP_Personnel_id")

  @@index([anneeScolaireId], map: "InscriptionP_AnneeScolaire_id")
  @@index([eleveId], map: "InscriptionP_Eleve_id")
  @@index([personnelId], map: "InscriptionP_Personnel_id")
}

model MiseEnPlacePrimaire {
  id                  Int               @id
  personnelPrimaireId Int
  anneeScolaireId     Int
  classePrimaireId    Int
  anneeScolaire       AnneeScolaire     @relation(fields: [anneeScolaireId], references: [id], onUpdate: Restrict, map: "MiseEnPlaceP_AnneeScolaire_id")
  classePrimaire      ClassePrimaire    @relation(fields: [classePrimaireId], references: [id], onUpdate: Restrict, map: "MiseEnPlaceP_ClassePrimaire_id")
  personnelPrimaire   PersonnelPrimaire @relation(fields: [personnelPrimaireId], references: [id], onUpdate: Restrict, map: "MiseEnPlaceP_PersonnelPrimaire_id")

  @@index([anneeScolaireId], map: "MiseEnPlaceP_AnneeS_id")
  @@index([classePrimaireId], map: "MiseEnPlaceP_ClasseP_id")
  @@index([personnelPrimaireId], map: "MiseEnPlaceP_PersonnelP_id")
}

model ObjetRecouvrement {
  id                   Int                    @id
  designation          String                 @db.VarChar(40)
  recouvrementPrimaires RecouvrementPrimaire[]
}

model Parent {
  id             Int     @id
  pere           String  @db.VarChar(60)
  mere           String  @db.VarChar(60)
  professionPere String  @db.VarChar(30)
  professionMere String  @db.VarChar(30)
  telephonePere  String  @db.VarChar(15)
  telephoneMere  String  @db.VarChar(15)
  eleves          Eleve[]
}

model Permission {
  id          Int         @id
  code        String      @db.VarChar(30)
  description String      @db.VarChar(30)
  personnels   Personnel[]
}

model Personnel {
  id                   Int                    @id
  nom                  String                 @db.VarChar(30)
  postnom              String                 @db.VarChar(30)
  prenom               String                 @db.VarChar(60)
  sexe                 String                 @db.Char(1)
  telephone            String                 @db.VarChar(15)
  actif                Boolean
  fonctionId           Int
  permissionId         Int
  confirmationPrimaire ConfirmationPrimaire[]
  inscriptionPrimaires  InscriptionPrimaire[]
  fonction             Fonction               @relation(fields: [fonctionId], references: [id], onUpdate: Restrict, map: "Personnel_Fonction_id")
  permission           Permission             @relation(fields: [permissionId], references: [id], onUpdate: Restrict, map: "Personnel_Permission_id")
  personnelPrimaires    PersonnelPrimaire[]

  @@index([fonctionId], map: "Personnel_Fonction_id")
  @@index([permissionId], map: "Personnel_Permission_id")
}

model PersonnelPrimaire {
  id                  Int                   @id
  personnelId         Int
  miseenplaceprimaire MiseEnPlacePrimaire[]
  personnel           Personnel             @relation(fields: [personnelId], references: [id], onUpdate: Restrict, map: "PersonnelP_Personnel_id")

  @@index([personnelId], map: "PersonnelP_Personnel_id")
}

model RecouvrementPrimaire {
  id                          Int                           @id
  date                        DateTime                      @db.Date
  objetRId                    Int
  anneeScolaireId             Int
  anneescolaire               AnneeScolaire                 @relation(fields: [anneeScolaireId], references: [id], onUpdate: Restrict, map: "RecouvrementP_AnneeS_id")
  objetRecouvrement           ObjetRecouvrement             @relation(fields: [objetRId], references: [id], onUpdate: Restrict, map: "RecouvrementP_objetRId_ObjetRecouvrement_id")
  recouvrementPrimaireDetails RecouvrementPrimaireDetails[]

  @@index([anneeScolaireId], map: "RecouvrementP_AnneeS_id")
  @@index([objetRId], map: "RecouvrementP_objetRId_ObjetRecouvrement_id")
}

model RecouvrementPrimaireDetails {
  id                     Int                  @id
  recouvrementPrimaireId Int
  elevePrimaireId        Int
  elevePrimaire          ElevePrimaire        @relation(fields: [elevePrimaireId], references: [id], onUpdate: Restrict, map: "RecouvrementP_ElevePrimaire_id")
  recouvrementPrimaire   RecouvrementPrimaire @relation(fields: [recouvrementPrimaireId], references: [id], onUpdate: Restrict, map: "RecouvrementP_RecouvrementPrimaire_id")

  @@index([elevePrimaireId], map: "RecouvrementPDetails_EleveP_id")
  @@index([recouvrementPrimaireId], map: "RecouvrementPDetails_RecouvrementP_id")
}
